{"version":3,"sources":["components/TVChartContainer/api/binance.js","components/TVChartContainer/api/index.js","components/TVChartContainer/index.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["binanceHost","config","supported_resolutions","symbols","baseAsset","baseAssetPrecision","baseCommissionPrecision","filters","filterType","minPrice","maxPrice","tickSize","multiplierUp","multiplierDown","avgPriceMins","minQty","maxQty","stepSize","minNotional","applyToMarket","limit","maxNumOrders","maxNumAlgoOrders","icebergAllowed","isMarginTradingAllowed","isSpotTradingAllowed","ocoAllowed","orderTypes","permissions","quoteAsset","quoteAssetPrecision","quoteCommissionPrecision","quoteOrderQtyMarketAllowed","quotePrecision","status","symbol","DataFeed","onReady","cb","console","log","setTimeout","fetch","then","res","json","_symbols","supports_marks","supports_timescale_marks","supports_time","catch","err","error","searchSymbols","userInput","exchange","symbolType","onResultReadyCallback","resolveSymbol","symbolName","onSymbolResolvedCallback","onResolveErrorCallback","comps","split","pricescale","filter","Math","round","parseFloat","length","toUpperCase","name","description","ticker","session","minmov","timezone","has_intraday","has_daily","has_weekly_and_monthly","currency_code","getBars","symbolInfo","resolution","from","to","onHistoryCallback","onErrorCallback","firstDataRequest","Date","toGMTString","interval","1","3","5","15","30","60","120","240","360","480","720","D","W","M","totalKlines","getKlines","startTime","endTime","url","concat","binanceKlines","klines","noData","map","kline","time","close","open","high","low","volume","subscribeBars","onRealtimeCallback","subscribeUID","onResetCacheNeededCallback","unsubscribeBars","subscriberUID","calculateHistoryDepth","resolutionBack","intervalBack","undefined","getMarks","startDate","endDate","onDataCallback","getTimeScaleMarks","getServerTime","serverTime","floor","getLanguageFromURL","results","RegExp","exec","window","location","search","decodeURIComponent","replace","TVChartContainer","widgetOptions","debug","this","props","datafeed","Datafeed","container_id","containerId","library_path","libraryPath","locale","disabled_features","enabled_features","charts_storage_url","chartsStorageUrl","charts_storage_api_version","chartsStorageApiVersion","client_id","clientId","user_id","userId","fullscreen","autosize","studies_overrides","studiesOverrides","overrides","tvWidget","TradingView","widget","onChartReady","id","className","React","defaultProps","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1f5d7109.chunk.js","sourcesContent":["const binanceHost = \"https://api.binance.com\";\n\nexport const binanceServerTime = () => {\n  return fetch(binanceHost + \"/api/v1/time\")\n    .then(res => {\n      return res.json();\n    })\n    .then(json => {\n      return json.serverTime;\n    });\n};\n\nexport const binanceSymbols = () => {\n  return fetch(binanceHost + \"/api/v1/exchangeInfo\")\n    .then(res => {\n      return res.json();\n    })\n    .then(json => {\n      console.log(\"binanceSymbols:\", json);\n      return json.symbols;\n    });\n};\n\nexport const binanceKlines = (symbol, interval, startTime, endTime, limit) => {\n  const url =\n    binanceHost +\n    \"/api/v1/klines\" +\n    \"?symbol=\".concat(symbol) +\n    \"&interval=\".concat(interval) +\n    \"&limit=\".concat(limit) +\n    \"&startTime=\".concat(startTime) +\n    \"&endTime=\".concat(endTime);\n\n  return fetch(url)\n    .then(res => {\n      return res.json();\n    })\n    .then(json => {\n      console.log(\"binanceKlines:\", json);\n      return json;\n    });\n};\n","import { binanceSymbols, binanceKlines, binanceServerTime } from \"./binance\";\n\nconst supportedResolutions = [\n  \"1\",\n  \"3\",\n  \"5\",\n  \"15\",\n  \"30\",\n  \"60\",\n  \"120\",\n  \"240\",\n  \"D\"\n];\nconst config = {\n  supported_resolutions: supportedResolutions\n};\n\nlet symbols = [\n  {\n    baseAsset: \"ETH\",\n    baseAssetPrecision: 8,\n    baseCommissionPrecision: 8,\n    filters: [\n      {\n        filterType: \"PRICE_FILTER\",\n        minPrice: \"0.00000100\",\n        maxPrice: \"100000.00000000\",\n        tickSize: \"0.00000100\"\n      },\n      {\n        filterType: \"PERCENT_PRICE\",\n        multiplierUp: \"5\",\n        multiplierDown: \"0.2\",\n        avgPriceMins: 5\n      },\n      {\n        filterType: \"LOT_SIZE\",\n        minQty: \"0.00100000\",\n        maxQty: \"100000.00000000\",\n        stepSize: \"0.00100000\"\n      },\n      {\n        filterType: \"MIN_NOTIONAL\",\n        minNotional: \"0.00010000\",\n        applyToMarket: true,\n        avgPriceMins: 5\n      },\n      { filterType: \"ICEBERG_PARTS\", limit: 10 },\n      {\n        filterType: \"MARKET_LOT_SIZE\",\n        minQty: \"0.00000000\",\n        maxQty: \"2729.13846842\",\n        stepSize: \"0.00000000\"\n      },\n      { filterType: \"MAX_NUM_ORDERS\", maxNumOrders: 200 },\n      { filterType: \"MAX_NUM_ALGO_ORDERS\", maxNumAlgoOrders: 5 }\n    ],\n    icebergAllowed: true,\n    isMarginTradingAllowed: true,\n    isSpotTradingAllowed: true,\n    ocoAllowed: true,\n    orderTypes: [\n      \"LIMIT\",\n      \"LIMIT_MAKER\",\n      \"MARKET\",\n      \"STOP_LOSS_LIMIT\",\n      \"TAKE_PROFIT_LIMIT\"\n    ],\n    permissions: [\"SPOT\", \"MARGIN\"],\n    quoteAsset: \"BTC\",\n    quoteAssetPrecision: 8,\n    quoteCommissionPrecision: 8,\n    quoteOrderQtyMarketAllowed: true,\n    quotePrecision: 8,\n    status: \"TRADING\",\n    symbol: \"ETHBTC\"\n  }\n];\n\nconst DataFeed = {\n  onReady: cb => {\n    console.log(\"=====onReady running\");\n    setTimeout(() => cb(config), 100);\n    return binanceSymbols()\n      .then(_symbols => {\n        symbols = _symbols;\n        console.log(\"=====onReady running _symbols\", _symbols);\n        cb({\n          supports_marks: false,\n          supports_timescale_marks: false,\n          supports_time: true,\n          supported_resolutions: [\n            \"1\",\n            \"3\",\n            \"5\",\n            \"15\",\n            \"30\",\n            \"60\",\n            \"120\",\n            \"240\",\n            \"360\",\n            \"480\",\n            \"720\",\n            \"1D\",\n            \"3D\",\n            \"1W\",\n            \"1M\"\n          ]\n        });\n      })\n      .catch(err => {\n        console.error(err);\n      });\n  },\n  searchSymbols: (userInput, exchange, symbolType, onResultReadyCallback) => {\n    console.log(\"====Search Symbols running\");\n  },\n  resolveSymbol: (\n    symbolName,\n    onSymbolResolvedCallback,\n    onResolveErrorCallback\n  ) => {\n    console.log(\"👉 resolveSymbol:\", symbolName, symbols);\n    const comps = symbolName.split(\":\");\n    symbolName = (comps.length > 1 ? comps[1] : symbolName).toUpperCase();\n\n    function pricescale(symbol) {\n      for (let filter of symbol.filters) {\n        if (filter.filterType === \"PRICE_FILTER\") {\n          return Math.round(1 / parseFloat(filter.tickSize));\n        }\n      }\n      return 1;\n    }\n\n    for (let symbol of symbols) {\n      if (symbol.symbol === symbolName) {\n        setTimeout(() => {\n          onSymbolResolvedCallback({\n            name: symbol.symbol,\n            description: symbol.baseAsset + \" / \" + symbol.quoteAsset,\n            ticker: symbol.symbol,\n            //exchange: 'Binance',\n            //listed_exchange: 'Binance',\n            //type: 'crypto',\n            session: \"24x7\",\n            minmov: 1,\n            pricescale: pricescale(symbol),\n            timezone: \"UTC\",\n            has_intraday: true,\n            has_daily: true,\n            has_weekly_and_monthly: true,\n            currency_code: symbol.quoteAsset\n          });\n        }, 0);\n        return;\n      }\n    }\n\n    onResolveErrorCallback(\"not found\");\n  },\n  getBars: function (\n    symbolInfo,\n    resolution,\n    from,\n    to,\n    onHistoryCallback,\n    onErrorCallback,\n    firstDataRequest\n  ) {\n    console.log(\"👉 getBars:\", symbolInfo.name, resolution);\n    console.log(\"First:\", firstDataRequest);\n    console.log(\"From:\", from, \"(\" + new Date(from * 1000).toGMTString() + \")\");\n    console.log(\"To:  \", to, \"(\" + new Date(to * 1000).toGMTString() + \")\");\n\n    const interval = {\n      1: \"1m\",\n      3: \"3m\",\n      5: \"5m\",\n      15: \"15m\",\n      30: \"30m\",\n      60: \"1h\",\n      120: \"2h\",\n      240: \"4h\",\n      360: \"6h\",\n      480: \"8h\",\n      720: \"12h\",\n      D: \"1d\",\n      \"1D\": \"1d\",\n      \"3D\": \"3d\",\n      W: \"1w\",\n      \"1W\": \"1w\",\n      M: \"1M\",\n      \"1M\": \"1M\"\n    }[resolution];\n\n    if (!interval) {\n      onErrorCallback(\"Invalid interval\");\n    }\n\n    let totalKlines = [];\n\n    const finishKlines = () => {\n      console.log(\"📊:\", totalKlines.length);\n\n      if (totalKlines.length === 0) {\n        onHistoryCallback([], { noData: true });\n      } else {\n        onHistoryCallback(\n          totalKlines.map(kline => {\n            return {\n              time: kline[0],\n              close: parseFloat(kline[4]),\n              open: parseFloat(kline[1]),\n              high: parseFloat(kline[2]),\n              low: parseFloat(kline[3]),\n              volume: parseFloat(kline[5])\n            };\n          }),\n          {\n            noData: false\n          }\n        );\n      }\n    };\n\n    const getKlines = (from, to) => {\n      binanceKlines(symbolInfo.name, interval, from, to, 500)\n        .then(klines => {\n          totalKlines = totalKlines.concat(klines);\n\n          if (klines.length === 500) {\n            from = klines[klines.length - 1][0] + 1;\n            getKlines(from, to);\n          } else {\n            finishKlines();\n          }\n        })\n        .catch(err => {\n          console.error(err);\n          onErrorCallback(\"Some problem\");\n        });\n    };\n\n    from *= 1000;\n    to *= 1000;\n\n    getKlines(from, to);\n  },\n  subscribeBars: (\n    symbolInfo,\n    resolution,\n    onRealtimeCallback,\n    subscribeUID,\n    onResetCacheNeededCallback\n  ) => {\n    console.log(\"=====subscribeBars runnning\");\n  },\n  unsubscribeBars: subscriberUID => {\n    console.log(\"=====unsubscribeBars running\");\n  },\n  calculateHistoryDepth: (resolution, resolutionBack, intervalBack) => {\n    //optional\n    console.log(\"=====calculateHistoryDepth running\");\n    // while optional, this makes sure we request 24 hours of minute data at a time\n    // CryptoCompare's minute data endpoint will throw an error if we request data beyond 7 days in the past, and return no data\n    return resolution < 60\n      ? { resolutionBack: \"D\", intervalBack: \"1\" }\n      : undefined;\n  },\n  getMarks: (symbolInfo, startDate, endDate, onDataCallback, resolution) => {\n    //optional\n    console.log(\"=====getMarks running\");\n  },\n  getTimeScaleMarks: (\n    symbolInfo,\n    startDate,\n    endDate,\n    onDataCallback,\n    resolution\n  ) => {\n    //optional\n    console.log(\"=====getTimeScaleMarks running\");\n  },\n  getServerTime: cb => {\n    console.log(\"=====getServerTime running\");\n    binanceServerTime()\n      .then(time => {\n        cb(Math.floor(time / 1000));\n      })\n      .catch(err => {\n        console.error(err);\n      });\n  }\n};\n\nexport default DataFeed;","import * as React from 'react';\nimport './index.css';\nimport Datafeed from './api/'\n\n\nfunction getLanguageFromURL() {\n\tconst regex = new RegExp('[\\\\?&]lang=([^&#]*)');\n\tconst results = regex.exec(window.location.search);\n\treturn results === null ? null : decodeURIComponent(results[1].replace(/\\+/g, ' '));\n}\n\nexport class TVChartContainer extends React.PureComponent {\n\n\tstatic defaultProps = {\n\t\tsymbol: 'ETHBTC',\n\t\tinterval: '15',\n\t\tcontainerId: 'tv_chart_container',\n\t\tlibraryPath: 'charting_library/',\n\t\tchartsStorageUrl: 'https://saveload.tradingview.com',\n\t\tchartsStorageApiVersion: '1.1',\n\t\tclientId: 'tradingview.com',\n\t\tuserId: 'public_user_id',\n\t\tfullscreen: false,\n\t\tautosize: true,\n\t\tstudiesOverrides: {},\n\t};\n\n\tcomponentDidMount() {\n\t\tconst widgetOptions = {\n\t\t\tdebug: false,\n\t\t\tsymbol: this.props.symbol,\n\t\t\tdatafeed: Datafeed,\n\t\t\tinterval: this.props.interval,\n\t\t\tcontainer_id: this.props.containerId,\n\t\t\tlibrary_path: this.props.libraryPath,\n\t\t\tlocale: getLanguageFromURL() || 'en',\n\t\t\tdisabled_features: ['use_localstorage_for_settings'],\n\t\t\tenabled_features: ['study_templates'],\n\t\t\tcharts_storage_url: this.props.chartsStorageUrl,\n\t\t\tcharts_storage_api_version: this.props.chartsStorageApiVersion,\n\t\t\tclient_id: this.props.clientId,\n\t\t\tuser_id: this.props.userId,\n\t\t\tfullscreen: this.props.fullscreen,\n\t\t\tautosize: this.props.autosize,\n\t\t\tstudies_overrides: this.props.studiesOverrides,\n\t\t\toverrides: {\n\t\t\t\t\"mainSeriesProperties.showCountdown\": true,\n\t\t\t\t\"paneProperties.background\": \"#131722\",\n\t\t\t\t\"paneProperties.vertGridProperties.color\": \"#363c4e\",\n\t\t\t\t\"paneProperties.horzGridProperties.color\": \"#363c4e\",\n\t\t\t\t\"symbolWatermarkProperties.transparency\": 90,\n\t\t\t\t\"scalesProperties.textColor\" : \"#AAA\",\n\t\t\t\t\"mainSeriesProperties.candleStyle.wickUpColor\": '#336854',\n\t\t\t\t\"mainSeriesProperties.candleStyle.wickDownColor\": '#7f323f',\n\t\t\t}\n\t\t};\n\n\t\t// eslint-disable-line\n\t\tconst widget = (window.tvWidget = new window.TradingView.widget(\n      widgetOptions\n    ));\n\n    widget.onChartReady(() => {\n      console.log(\"Chart has loaded!\");\n\t\t});\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div\n\t\t\t\tid={ this.props.containerId }\n\t\t\t\tclassName={ 'TVChartContainer' }\n\t\t\t/>\n\t\t);\n\t}\n}\n","import * as React from 'react';\nimport './App.css';\nimport { TVChartContainer } from './components/TVChartContainer/index';\n\nclass App extends React.Component {\n\trender() {\n\t\treturn (\n\t\t\t<div className={ 'App' }>\n\t\t\t\t<TVChartContainer />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}